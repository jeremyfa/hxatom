package atom;
@:native("Atom") extern class Atom {
	var commands : Dynamic;
	var config : Dynamic;
	var clipboard : Dynamic;
	var contextMenu : Dynamic;
	var menu : Dynamic;
	var keymaps : Dynamic;
	var tooltips : Dynamic;
	var project : Dynamic;
	var grammars : Dynamic;
	var packages : Dynamic;
	var themes : Dynamic;
	var styles : Dynamic;
	var deserializers : Dynamic;
	var views : Dynamic;
	var workspace : Dynamic;
	function onDidBeep(callback:haxe.Constraints.Function):atom.Disposable;
	function onWillThrowError(callback:haxe.Constraints.Function):atom.Disposable;
	function onDidThrowError(callback:haxe.Constraints.Function):atom.Disposable;
	function inDevMode():Void;
	function inSafeMode():Void;
	function inSpecMode():Void;
	function getVersion():String;
	function isReleasedVersion():Void;
	function getWindowLoadTime():Float;
	function open(options:Dynamic<Dynamic>):Void;
	function pickFolder(callback:haxe.Constraints.Function):Void;
	function close():Void;
	function getSize():Dynamic<Dynamic>;
	function setSize(width:Float, height:Float):Void;
	function getPosition():Dynamic<Dynamic>;
	function setPosition(x:Float, y:Float):Void;
	function center():Void;
	function focus():Void;
	function show():Void;
	function hide():Void;
	function reload():Void;
	function isMaximixed():Bool;
	function isFullScreen():Void;
	function setFullScreen():Void;
	function toggleFullScreen():Void;
	function beep():Void;
	function confirm(options:Dynamic<Dynamic>):Float;
	function openDevTools():Void;
	function toggleDevTools():Void;
	function executeJavaScriptInDevTools():Void;
}