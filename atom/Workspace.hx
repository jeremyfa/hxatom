package atom;
@:native("Workspace") extern class Workspace {
	function observeTextEditors(callback:haxe.Constraints.Function):atom.Disposable;
	function observePaneItems(callback:haxe.Constraints.Function):atom.Disposable;
	function onDidChangeActivePaneItem(callback:haxe.Constraints.Function):atom.Disposable;
	function observeActivePaneItem(callback:haxe.Constraints.Function):atom.Disposable;
	function onDidOpen(callback:haxe.Constraints.Function):atom.Disposable;
	function onDidAddPane(callback:haxe.Constraints.Function):atom.Disposable;
	function onDidDestroyPane(callback:haxe.Constraints.Function):atom.Disposable;
	function observePanes(callback:haxe.Constraints.Function):atom.Disposable;
	function onDidChangeActivePane(callback:haxe.Constraints.Function):atom.Disposable;
	function observeActivePane(callback:haxe.Constraints.Function):atom.Disposable;
	function onDidAddPaneItem(callback:haxe.Constraints.Function):atom.Disposable;
	function onWillDestroyPaneItem(callback:haxe.Constraints.Function):atom.Disposable;
	function onDidDestroyPaneItem(callback:haxe.Constraints.Function):atom.Disposable;
	function onDidAddTextEditor(callback:haxe.Constraints.Function):atom.Disposable;
	function open(uri:String, options:Dynamic<Dynamic>):atom.TextEditor;
	function reopenItem():Dynamic;
	function addOpener(opener:haxe.Constraints.Function):atom.Disposable;
	function getPaneItems():Array<Dynamic>;
	function getActivePaneItem():Dynamic<Dynamic>;
	function getTextEditors():Array<Dynamic>;
	function getActiveTextEditor():atom.TextEditor;
	function getPanes():Array<Dynamic>;
	function getActivePane():atom.Pane;
	function activateNextPane():Void;
	function activatePreviousPane():Void;
	function paneForURI(uri:String):atom.Pane;
	function paneForItem(item:Dynamic):atom.Pane;
	function getBottomPanels():Void;
	function addBottomPanel(options:Dynamic<Dynamic>):atom.Panel;
	function getLeftPanels():Void;
	function addLeftPanel(options:Dynamic<Dynamic>):atom.Panel;
	function getRightPanels():Void;
	function addRightPanel(options:Dynamic<Dynamic>):atom.Panel;
	function getTopPanels():Void;
	function addTopPanel(options:Dynamic<Dynamic>):atom.Panel;
	function getModalPanels():Void;
	function addModalPanel(options:Dynamic<Dynamic>):atom.Panel;
	function panelForItem(item:Dynamic):Dynamic;
	function scan(regex:js.RegExp, options:Dynamic<Dynamic>, iterator:haxe.Constraints.Function):Dynamic;
	function replace(regex:js.RegExp, replacementText:Dynamic, filePaths:Dynamic, iterator:haxe.Constraints.Function):Dynamic;
}