package atom;

@:realPath("atom.Pane") @:native("Pane") extern class Pane {
	function activate() : Void;
	function activateItem() : Void;
	function activateItemAtIndex(index : Float) : Void;
	function activateItemForURI() : Bool;
	function activateNextItem() : Void;
	function activatePreviousItem() : Void;
	function addItem(item : Dynamic, index : Float) : Dynamic;
	function addItems(items : Array<Dynamic>, index : Float) : Array<Dynamic>;
	function destroy() : Void;
	function destroyActiveItem() : Void;
	function destroyInactiveItems() : Void;
	function destroyItem(item : Dynamic) : Void;
	function destroyItems() : Void;
	function getActiveItem() : Dynamic;
	function getActiveItemIndex() : Float;
	function getItems() : Array<Dynamic>;
	function isActive() : Bool;
	function itemAtIndex(index : Float) : Dynamic;
	function itemForURI(uri : String) : Void;
	function moveItem(item : Dynamic, index : Float) : Void;
	function moveItemLeft() : Void;
	function moveItemRight() : Void;
	function moveItemToPane(item : Dynamic, pane : Pane, index : Float) : Void;
	function observeActive(callback : haxe.Function) : Disposable;
	function observeActiveItem(callback : haxe.Function) : Disposable;
	function observeItems(callback : haxe.Function) : Disposable;
	function onDidActivate(callback : haxe.Function) : Disposable;
	function onDidAddItem(callback : haxe.Function) : Disposable;
	function onDidChangeActive(callback : haxe.Function) : Disposable;
	function onDidChangeActiveItem(callback : haxe.Function) : Disposable;
	function onDidDestroy(callback : haxe.Function) : Disposable;
	function onDidMoveItem(callback : haxe.Function) : Disposable;
	function onDidRemoveItem(callback : haxe.Function) : Disposable;
	function onWillDestroyItem(callback : haxe.Function) : Disposable;
	function saveActiveItem() : Void;
	function saveActiveItemAs(nextAction : haxe.Function) : Void;
	function saveItem(item : Dynamic, nextAction : haxe.Function) : Void;
	function saveItemAs(item : Dynamic, nextAction : haxe.Function) : Void;
	function saveItems() : Void;
	function splitDown(params : Dynamic<Dynamic>) : Pane;
	function splitLeft(params : Dynamic<Dynamic>) : Pane;
	function splitRight(params : Dynamic<Dynamic>) : Pane;
	function splitUp(params : Dynamic<Dynamic>) : Pane;
}
