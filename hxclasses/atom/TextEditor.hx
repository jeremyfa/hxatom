package atom;

@:realPath("atom.TextEditor") @:native("TextEditor") extern class TextEditor {
	function abortTransaction() : Void;
	function addCursorAtBufferPosition(bufferPosition : Point) : Cursor;
	function addCursorAtScreenPosition(screenPosition : Point) : Cursor;
	function addSelectionForBufferRange(bufferRange : Range, options : Dynamic<Dynamic>) : Selection;
	function addSelectionForScreenRange(screenRange : Range, options : Dynamic<Dynamic>) : Selection;
	function autoIndentSelectedRows() : Void;
	function backspace() : Void;
	function backwardsScanInBufferRange(regex : js.RegExp, range : Range, iterator : haxe.Function) : Void;
	function bufferPositionForScreenPosition(bufferPosition : Point, options : Dynamic) : Point;
	function bufferRangeForScopeAtCursor(scopeSelector : String) : Range;
	function bufferRangeForScreenRange(screenRange : Range) : Range;
	function clipBufferPosition(bufferPosition : Point) : Point;
	function clipBufferRange(range : Range) : Range;
	function clipScreenPosition(screenPosition : Point, options : Dynamic<Dynamic>) : Point;
	function copySelectedText() : Void;
	function createCheckpoint() : Dynamic;
	function cutSelectedText() : Void;
	function cutToEndOfLine() : Void;
	function decorateMarker(marker : Marker, decorationParams : Dynamic<Dynamic>) : Decoration;
	function decorationsForScreenRowRange(startScreenRow : Float, endScreenRow : Float) : Dynamic;
	function delete() : Void;
	function deleteLine() : Void;
	function deleteToBeginningOfLine() : Void;
	function deleteToBeginningOfWord() : Void;
	function deleteToEndOfLine() : Void;
	function deleteToEndOfWord() : Void;
	function findMarkers(properties : Dynamic<Dynamic>) : Void;
	function foldAll() : Void;
	function foldAllAtIndentLevel(level : Float) : Void;
	function foldBufferRow(bufferRow : Float) : Void;
	function foldCurrentRow() : Void;
	function foldSelectedLines() : Void;
	function getCurrentParagraphBufferRange() : Range;
	function getCursorBufferPosition() : Point;
	function getCursorBufferPositions() : Array<Dynamic>;
	function getCursorScreenPosition() : Point;
	function getCursorScreenPositions() : Array<Dynamic>;
	function getCursors() : Void;
	function getCursorsOrderedByBufferPosition() : Array<Dynamic>;
	function getDecorations(propertyFilter : Dynamic<Dynamic>) : Array<Dynamic>;
	function getEncoding() : String;
	function getGrammar() : Void;
	function getHighlightDecorations(propertyFilter : Dynamic<Dynamic>) : Array<Dynamic>;
	function getLastBufferRow() : Float;
	function getLastCursor() : Cursor;
	function getLastScreenRow() : Float;
	function getLastSelection() : Selection;
	function getLineCount() : Float;
	function getLineDecorations(propertyFilter : Dynamic<Dynamic>) : Array<Dynamic>;
	function getLineNumberDecorations(propertyFilter : Dynamic<Dynamic>) : Array<Dynamic>;
	function getLongTitle() : String;
	function getMarker(id : Float) : Void;
	function getMarkerCount() : Float;
	function getMarkers() : Void;
	function getOverlayDecorations(propertyFilter : Dynamic<Dynamic>) : Array<Dynamic>;
	function getPath() : String;
	function getPlaceholderText() : String;
	function getRootScopeDescriptor() : ScopeDescriptor;
	function getScreenLineCount() : Float;
	function getSelectedBufferRange() : Range;
	function getSelectedBufferRanges() : Array<Dynamic>;
	function getSelectedScreenRange() : Range;
	function getSelectedScreenRanges() : Array<Dynamic>;
	function getSelectedText() : String;
	function getSelections() : Array<Dynamic>;
	function getSelectionsOrderedByBufferPosition() : Array<Dynamic>;
	function getSoftTabs() : Bool;
	function getSoftWrapColumn() : Void;
	function getTabLength() : Float;
	function getTabText() : String;
	function getText() : String;
	function getTextInBufferRange(range : Range) : String;
	function getTitle() : String;
	function getWordUnderCursor(options : Dynamic) : Dynamic;
	function groupChangesSinceCheckpoint() : Bool;
	function hasMultipleCursors() : Bool;
	function indentLevelForLine() : haxe.extern.EitherType<String,Float>;
	function indentSelectedRows() : Void;
	function indentationForBufferRow() : Float;
	function insertNewline() : Void;
	function insertNewlineAbove() : Void;
	function insertNewlineBelow() : Void;
	function insertText(text : String, options : Dynamic) : haxe.extern.EitherType<Range,Bool>;
	function isBufferRowCommented() : Void;
	function isEmpty() : Bool;
	function isFoldableAtBufferRow(bufferRow : Float) : Bool;
	function isFoldableAtScreenRow(bufferRow : Float) : Bool;
	function isFoldedAtBufferRow(bufferRow : Float) : Bool;
	function isFoldedAtCursorRow() : Bool;
	function isFoldedAtScreenRow(screenRow : Float) : Bool;
	function isModified() : Bool;
	function isSoftWrapped() : Bool;
	function lineTextForBufferRow(bufferRow : Float) : String;
	function lineTextForScreenRow(screenRow : Float) : String;
	function lowerCase() : Void;
	function markBufferPosition(position : Point, options : Dynamic) : Marker;
	function markBufferRange(range : Range, properties : Dynamic) : Marker;
	function markScreenPosition(position : Point, options : Dynamic) : Marker;
	function markScreenRange(range : Range, properties : Dynamic) : Marker;
	function moveDown(lineCount : Float) : Void;
	function moveLeft(columnCount : Float) : Void;
	function moveRight(columnCount : Float) : Void;
	function moveToBeginningOfLine() : Void;
	function moveToBeginningOfNextParagraph() : Void;
	function moveToBeginningOfNextWord() : Void;
	function moveToBeginningOfPreviousParagraph() : Void;
	function moveToBeginningOfScreenLine() : Void;
	function moveToBeginningOfWord() : Void;
	function moveToBottom() : Void;
	function moveToEndOfLine() : Void;
	function moveToEndOfScreenLine() : Void;
	function moveToEndOfWord() : Void;
	function moveToFirstCharacterOfLine() : Void;
	function moveToNextWordBoundary() : Void;
	function moveToPreviousWordBoundary() : Void;
	function moveToTop() : Void;
	function moveUp(lineCount : Float) : Void;
	function mutateSelectedText(fn : haxe.Function) : Void;
	function observeCursors(callback : haxe.Function) : Disposable;
	function observeDecorations(callback : haxe.Function) : Disposable;
	function observeGrammar(callback : haxe.Function) : Disposable;
	function observeSelections(callback : haxe.Function) : Disposable;
	function onDidAddCursor(callback : haxe.Function) : Disposable;
	function onDidAddDecoration(callback : haxe.Function) : Disposable;
	function onDidAddSelection(callback : haxe.Function) : Disposable;
	function onDidChange(callback : haxe.Function) : Disposable;
	function onDidChangeCursorPosition(callback : haxe.Function) : Disposable;
	function onDidChangeEncoding(callback : haxe.Function) : Disposable;
	function onDidChangeGrammar(callback : haxe.Function) : Disposable;
	function onDidChangeModified(callback : haxe.Function) : Disposable;
	function onDidChangePath(callback : haxe.Function) : Disposable;
	function onDidChangePlaceholderText(callback : haxe.Function) : Disposable;
	function onDidChangeSelectionRange(callback : haxe.Function) : Disposable;
	function onDidChangeSoftWrapped(callback : haxe.Function) : Disposable;
	function onDidChangeTitle(callback : haxe.Function) : Disposable;
	function onDidConflict(callback : haxe.Function) : Disposable;
	function onDidDestroy(callback : haxe.Function) : Disposable;
	function onDidInsertText(callback : haxe.Function) : Disposable;
	function onDidRemoveCursor(callback : haxe.Function) : Disposable;
	function onDidRemoveDecoration(callback : haxe.Function) : Disposable;
	function onDidRemoveSelection(callback : haxe.Function) : Disposable;
	function onDidSave(callback : haxe.Function) : Disposable;
	function onDidStopChanging(callback : haxe.Function) : Disposable;
	function onWillInsertText(callback : haxe.Function) : Disposable;
	function outdentSelectedRows() : Void;
	function pasteText(options : Dynamic) : Void;
	function redo() : Void;
	function revertToCheckpoint() : Bool;
	function save() : Void;
	function saveAs(filePath : String) : Void;
	function scan(regex : js.RegExp, iterator : haxe.Function) : Void;
	function scanInBufferRange(regex : js.RegExp, range : Range, iterator : haxe.Function) : Void;
	function scopeDescriptorForBufferPosition(bufferPosition : Point) : ScopeDescriptor;
	function screenPositionForBufferPosition(bufferPosition : Point, options : Dynamic) : Point;
	function screenRangeForBufferRange(bufferRange : Range) : Range;
	function scrollToBottom() : Void;
	function scrollToBufferPosition(bufferPosition : Dynamic<Dynamic>, options : Dynamic<Dynamic>) : Void;
	function scrollToCursorPosition(options : Dynamic<Dynamic>) : Void;
	function scrollToScreenPosition(screenPosition : Dynamic<Dynamic>, options : Dynamic<Dynamic>) : Void;
	function scrollToTop() : Void;
	function selectAll() : Void;
	function selectDown(rowCount : Float) : Void;
	function selectLeft(columnCount : Float) : Void;
	function selectLinesContainingCursors() : Void;
	function selectMarker(marker : Marker) : Range;
	function selectRight(columnCount : Float) : Void;
	function selectToBeginningOfLine() : Void;
	function selectToBeginningOfNextParagraph() : Void;
	function selectToBeginningOfNextWord() : Void;
	function selectToBeginningOfPreviousParagraph() : Void;
	function selectToBeginningOfWord() : Void;
	function selectToBottom() : Void;
	function selectToBufferPosition(position : Point) : Void;
	function selectToEndOfLine() : Void;
	function selectToEndOfWord() : Void;
	function selectToFirstCharacterOfLine() : Void;
	function selectToNextWordBoundary() : Void;
	function selectToPreviousWordBoundary() : Void;
	function selectToScreenPosition(position : Point) : Void;
	function selectToTop() : Void;
	function selectUp(rowCount : Float) : Void;
	function selectWordsContainingCursors() : Void;
	function selectionIntersectsBufferRange(bufferRange : Range) : Bool;
	function setCursorBufferPosition(position : Point, options : Dynamic<Dynamic>) : Void;
	function setCursorScreenPosition(position : Point, options : Dynamic<Dynamic>) : Void;
	function setEncoding(encoding : String) : Void;
	function setGrammar(grammar : Grammar) : Void;
	function setIndentationForBufferRow(bufferRow : Float, newLevel : Float, options : Dynamic<Dynamic>) : Void;
	function setPlaceholderText(placeholderText : String) : Void;
	function setSelectedBufferRange(bufferRange : Range, options : Dynamic<Dynamic>) : Void;
	function setSelectedBufferRanges(bufferRanges : Array<Dynamic>, options : Dynamic<Dynamic>) : Void;
	function setSelectedScreenRange(screenRange : Range, options : Dynamic<Dynamic>) : Void;
	function setSelectedScreenRanges(screenRanges : Array<Dynamic>, options : Dynamic<Dynamic>) : Void;
	function setSoftTabs(softTabs : Bool) : Void;
	function setSoftWrapped(softWrapped : Bool) : Bool;
	function setTabLength(tabLength : Float) : Void;
	function setText() : Void;
	function setTextInBufferRange(range : Range, text : String, options : Dynamic<Dynamic>) : Range;
	function toggleFoldAtBufferRow() : Void;
	function toggleLineCommentsInSelection() : Void;
	function toggleSoftTabs() : Void;
	function toggleSoftWrapped() : Bool;
	function transact(groupingInterval : Float, fn : haxe.Function) : Void;
	function transpose() : Void;
	function undo() : Void;
	function unfoldAll() : Void;
	function unfoldBufferRow(bufferRow : Float) : Void;
	function unfoldCurrentRow() : Void;
	function upperCase() : Void;
	function usesSoftTabs() : Dynamic;
}
